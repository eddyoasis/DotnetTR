@model List<TradingLimitMVC.Models.TradingLimitRequest>

@{
    ViewData["Title"] = "Approval Dashboard - Trading Limit Requests";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Page Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="page-title mb-1">
                        <i class="fas fa-check-circle text-primary me-2"></i>
                        Approval Dashboard
                    </h1>
                    <p class="text-muted mb-0">Review and approve trading limit requests</p>
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-outline-primary" onclick="refreshPage()">
                        <i class="fas fa-sync-alt me-1"></i> Refresh
                    </button>
                    <a href="@Url.Action("Index", "TradingLimitRequest")" class="btn btn-outline-secondary">
                        <i class="fas fa-list me-1"></i> All Requests
                    </a>
                </div>
            </div>

            <!-- Summary Cards -->
            <div class="row mb-4">
                <div class="col-lg-3 col-md-6 mb-3">
                    <div class="card border-0 shadow-sm h-100">
                        <div class="card-body p-4">
                            <div class="d-flex align-items-center">
                                <div class="flex-shrink-0">
                                    <div class="stats-icon bg-warning bg-opacity-10 text-warning rounded-3 p-3">
                                        <i class="fas fa-clock fa-2x"></i>
                                    </div>
                                </div>
                                <div class="flex-grow-1 ms-3">
                                    <h3 class="stats-number mb-1">@Model.Count</h3>
                                    <p class="stats-label text-muted mb-0">Pending Approvals</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @* <div class="col-lg-3 col-md-6 mb-3">
                    <div class="card border-0 shadow-sm h-100">
                        <div class="card-body p-4">
                            <div class="d-flex align-items-center">
                                <div class="flex-shrink-0">
                                    <div class="stats-icon bg-danger bg-opacity-10 text-danger rounded-3 p-3">
                                        <i class="fas fa-exclamation-triangle fa-2x"></i>
                                    </div>
                                </div>
                                <div class="flex-grow-1 ms-3">
                                    <h3 class="stats-number mb-1">@Model.Count(r => r.SubmittedDate < DateTime.UtcNow.AddDays(-3))</h3>
                                    <p class="stats-label text-muted mb-0">Overdue (>3 days)</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div> *@
                <div class="col-lg-3 col-md-6 mb-3">
                    <div class="card border-0 shadow-sm h-100">
                        <div class="card-body p-4">
                            <div class="d-flex align-items-center">
                                <div class="flex-shrink-0">
                                    <div class="stats-icon bg-info bg-opacity-10 text-info rounded-3 p-3">
                                        <i class="fas fa-calendar-day fa-2x"></i>
                                    </div>
                                </div>
                                <div class="flex-grow-1 ms-3">
                                    <h3 class="stats-number mb-1">@Model.Count(r => r.SubmittedDate >= DateTime.UtcNow.Date)</h3>
                                    <p class="stats-label text-muted mb-0">Submitted Today</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @* <div class="col-lg-3 col-md-6 mb-3">
                    <div class="card border-0 shadow-sm h-100">
                        <div class="card-body p-4">
                            <div class="d-flex align-items-center">
                                <div class="flex-shrink-0">
                                    <div class="stats-icon bg-primary bg-opacity-10 text-primary rounded-3 p-3">
                                        <i class="fas fa-dollar-sign fa-2x"></i>
                                    </div>
                                </div>
                                <div class="flex-grow-1 ms-3">
                                    <h3 class="stats-number mb-1">@Model.Where(r => r.GLProposedLimit > 1000000).Count()</h3>
                                    <p class="stats-label text-muted mb-0">High Value (>1M)</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div> *@
            </div>

            <!-- Pending Requests Table -->
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white border-bottom-0 py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-list-check me-2 text-primary"></i>
                            Pending Approvals
                        </h5>
                        @* <div class="d-flex gap-2">
                            <select class="form-select form-select-sm" id="statusFilter" style="width: auto;">
                                <option value="">All Status</option>
                                <option value="Submitted">Submitted</option>
                                <option value="Pending Approval">Pending Approval</option>
                            </select>
                            <div>
                            </div>
                            <select class="form-select form-select-sm" id="sortBy" style="width: auto;">
                                <option value="date-desc">Latest First</option>
                                <option value="date-asc">Oldest First</option>
                                <option value="amount-desc">Highest Amount</option>
                                <option value="amount-asc">Lowest Amount</option>
                            </select>
                        </div> *@
                    </div>
                </div>
                <div class="card-body p-0">
                    @if (Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover mb-0" id="approvalsTable">
                                <thead class="table-light">
                                    <tr>
                                        <th class="border-0 px-4 py-3">Request</th>
                                        <th class="border-0 px-4 py-3">Client Details</th>
                                        <th class="border-0 px-4 py-3">Proposed Limits</th>
                                        <th class="border-0 px-4 py-3">Submitted</th>
                                        @* <th class="border-0 px-4 py-3">Priority</th> *@
                                        <th class="border-0 px-4 py-3 text-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var request in Model.OrderByDescending(r => r.SubmittedDate))
                                    {
                                        var daysSinceSubmission = (DateTime.UtcNow - (request.SubmittedDate ?? DateTime.UtcNow)).Days;
                                        var priorityClass = daysSinceSubmission > 3 ? "danger" : daysSinceSubmission > 1 ? "warning" : "success";
                                        var priorityText = daysSinceSubmission > 3 ? "Overdue" : daysSinceSubmission > 1 ? "Due Soon" : "Normal";
                                        
                                        <tr class="approval-row" data-status="@request.Status" data-amount="@request.GLProposedLimit" data-date="@request.SubmittedDate.ToLocalDisplay("yyyy-MM-dd")">
                                            <td class="px-4 py-3">
                                                <div class="d-flex flex-column">
                                                    <strong class="text-dark">@request.RequestId</strong>
                                                    <small class="text-muted">@request.RequestType</small>
                                                    <small class="text-muted">@request.ReasonType</small>
                                                    @* <span class="badge bg-@(request.Status == "Submitted" ? "primary" : "warning") bg-opacity-10 text-@(request.Status == "Submitted" ? "primary" : "warning") mt-1 align-self-start">
                                                        @request.Status
                                                    </span> *@
                                                </div>
                                            </td>
                                            <td class="px-4 py-3">
                                                <div class="d-flex flex-column">
                                                    <strong class="text-dark">@request.ClientCode</strong>
                                                    <small class="text-muted">@request.TRCode</small>
                                                    @if (request.HasSupportingDocuments)
                                                    {
                                                        <small class="text-success">
                                                            <i class="fas fa-paperclip me-1"></i>
                                                            @request.Attachments.Count attachment(s)
                                                        </small>
                                                    }
                                                </div>
                                            </td>
                                            <td class="px-4 py-3">
                                                <div class="d-flex flex-column">
                                                    <div class="mb-1">
                                                        <small class="text-muted">GL Limit:</small>
                                                        <strong class="text-dark d-block">@request.GLProposedLimit.ToString("C")</strong>
                                                    </div>
                                                    @* Temporarily hidden - Current Limit field *@
                                                    @* <div>
                                                        <small class="text-muted">Current Limit:</small>
                                                        <strong class="text-dark d-block">@request.CurrentProposedLimit.ToString("C")</strong>
                                                    </div> *@
                                                </div>
                                            </td>
                                            <td class="px-4 py-3">
                                                <div class="d-flex flex-column">
                                                    <strong class="text-dark">@request.SubmittedDate.ToLocalDisplay("MMM dd, yyyy")</strong>
                                                    <small class="text-muted">@request.SubmittedDate.ToLocalDisplay("hh:mm tt")</small>
                                                    <small class="text-muted">by @request.SubmittedBy</small>
                                                </div>
                                            </td>
                                           @*  <td class="px-4 py-3">
                                                <span class="badge bg-@priorityClass bg-opacity-10 text-@priorityClass">
                                                    @priorityText
                                                </span>
                                                @if (daysSinceSubmission > 0)
                                                {
                                                    <small class="text-muted d-block mt-1">@daysSinceSubmission day(s) ago</small>
                                                }
                                            </td> *@
                                            <td class="px-4 py-3 text-center">
                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("Details", new { id = request.Id })" 
                                                       class="btn btn-outline-primary btn-sm"
                                                       title="Review & Approve">
                                                        <i class="fas fa-eye me-1"></i>
                                                        Review
                                                    </a>
                                                    @* <button type="button" 
                                                            class="btn btn-outline-success btn-sm quick-approve-btn"
                                                            data-request-id="@request.Id"
                                                            data-request-name="@request.RequestId"
                                                            title="Quick Approve">
                                                        <i class="fas fa-check"></i>
                                                    </button> *@
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <div class="mb-3">
                                <i class="fas fa-check-circle fa-3x text-success"></i>
                            </div>
                            <h4 class="text-muted mb-2">No Pending Approvals</h4>
                            <p class="text-muted">All requests have been processed. Great job!</p>
                            <a href="@Url.Action("Index", "TradingLimitRequest")" class="btn btn-primary">
                                <i class="fas fa-list me-1"></i>
                                View All Requests
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Quick Approve Modal -->
<div class="modal fade" id="quickApproveModal" tabindex="-1" aria-labelledby="quickApproveModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="quickApproveModalLabel">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    Quick Approve Request
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3">Are you sure you want to approve request <strong id="requestName"></strong>?</p>
                <div class="mb-3">
                    <label for="quickApproveComments" class="form-label">Comments (Optional)</label>
                    <textarea class="form-control" id="quickApproveComments" rows="3" 
                              placeholder="Add any approval comments..."></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" id="confirmQuickApprove">
                    <i class="fas fa-check me-1"></i>
                    Approve Request
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Filter and sort functionality
            $('#statusFilter, #sortBy').on('change', function() {
                filterAndSortTable();
            });

            // Quick approve functionality
            $('.quick-approve-btn').on('click', function() {
                const requestId = $(this).data('request-id');
                const requestName = $(this).data('request-name');
                
                $('#requestName').text(requestName);
                $('#confirmQuickApprove').data('request-id', requestId);
                $('#quickApproveModal').modal('show');
            });

            $('#confirmQuickApprove').on('click', function() {
                const requestId = $(this).data('request-id');
                const comments = $('#quickApproveComments').val();
                
                quickApproveRequest(requestId, comments);
            });
        });

        function filterAndSortTable() {
            const statusFilter = $('#statusFilter').val();
            const sortBy = $('#sortBy').val();
            const rows = $('.approval-row').get();

            // Filter rows
            rows.forEach(row => {
                const $row = $(row);
                const status = $row.data('status');
                const showRow = !statusFilter || status === statusFilter;
                $row.toggle(showRow);
            });

            // Sort visible rows
            const visibleRows = $('.approval-row:visible').get();
            visibleRows.sort((a, b) => {
                const $a = $(a);
                const $b = $(b);

                switch (sortBy) {
                    case 'date-asc':
                        return new Date($a.data('date')) - new Date($b.data('date'));
                    case 'date-desc':
                        return new Date($b.data('date')) - new Date($a.data('date'));
                    case 'amount-asc':
                        return parseFloat($a.data('amount')) - parseFloat($b.data('amount'));
                    case 'amount-desc':
                        return parseFloat($b.data('amount')) - parseFloat($a.data('amount'));
                    default:
                        return new Date($b.data('date')) - new Date($a.data('date'));
                }
            });

            // Reorder rows in table
            const tbody = $('#approvalsTable tbody');
            visibleRows.forEach(row => tbody.append(row));
        }

        function quickApproveRequest(requestId, comments) {
            $.post('@Url.Action("Approve")', {
                RequestId: requestId,
                Comments: comments,
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            })
            .done(function() {
                $('#quickApproveModal').modal('hide');
                toastr.success('Request approved successfully!');
                setTimeout(() => location.reload(), 1500);
            })
            .fail(function() {
                toastr.error('Error approving request. Please try again.');
            });
        }

        function refreshPage() {
            location.reload();
        }
    </script>

    <style>
        .stats-icon {
            width: 60px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .stats-number {
            font-size: 2rem;
            font-weight: 700;
            color: #333;
        }

        .stats-label {
            font-size: 0.875rem;
            font-weight: 500;
        }

        .page-title {
            font-size: 2rem;
            font-weight: 700;
            color: #333;
        }

        .table th {
            font-weight: 600;
            color: #6c757d;
            text-transform: uppercase;
            font-size: 0.75rem;
            letter-spacing: 0.5px;
        }

        .table-hover tbody tr:hover {
            background-color: rgba(0, 123, 255, 0.05);
        }

        .badge {
            font-weight: 500;
            font-size: 0.75rem;
        }

        .btn-group .btn {
            border-radius: 0.375rem;
            margin-right: 0.25rem;
        }

        .btn-group .btn:last-child {
            margin-right: 0;
        }

        .card {
            transition: box-shadow 0.15s ease-in-out;
        }

        .card:hover {
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1) !important;
        }
    </style>
}