@model TradingLimitMVC.Models.PurchaseRequisition
@{
    ViewData["Title"] = "Purchase Requisition Details";
}

<style>
    .details-container {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        min-height: 100vh;
        padding: 20px 0;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .main-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        margin: 20px 0;
    }

    .header-section {
        background: linear-gradient(135deg, #0066cc, #004499);
        color: white;
        padding: 25px;
        text-align: center;
    }

    .header-title {
        font-size: 28px;
        font-weight: 700;
        margin: 0;
    }

    .header-subtitle {
        margin: 10px 0 0 0;
        opacity: 0.9;
        font-size: 16px;
    }

    .status-badge {
        display: inline-block;
        padding: 8px 20px;
        border-radius: 25px;
        font-size: 14px;
        font-weight: 600;
        margin-top: 15px;
    }

    /* Complete Approval Status Table */
    .approval-status-section {
        background: white;
        border-radius: 15px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        margin: 20px 0;
        padding: 25px;
    }

    .approval-status-title {
        color: #0066cc;
        font-size: 20px;
        font-weight: 700;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 3px solid #0066cc;
    }

    .approval-hierarchy {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 10px;
        margin-bottom: 20px;
    }

        .approval-hierarchy ol {
            margin: 10px 0 0 20px;
            padding: 0;
            line-height: 2;
        }

        .approval-hierarchy li {
            padding: 8px 0;
            font-size: 14px;
        }

        .approval-hierarchy strong {
            color: #0066cc;
            font-weight: 700;
        }

    .approval-check {
        color: #28a745;
        font-weight: 700;
    }

    .approval-pending {
        color: #ffc107;
        font-weight: 700;
    }

    .approval-rejected {
        color: #dc3545;
        font-weight: 700;
    }

    /* Workflow Progress */
    .approval-workflow {
        background: white;
        border-radius: 15px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        margin: 20px 0;
        padding: 25px;
    }

    .workflow-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 2px solid #0066cc;
    }

    .workflow-progress {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin: 30px 0;
        position: relative;
    }

        .workflow-progress::before {
            content: '';
            position: absolute;
            top: 25px;
            left: 25px;
            right: 25px;
            height: 3px;
            background: #e9ecef;
            z-index: 1;
        }

    .workflow-step {
        position: relative;
        z-index: 2;
        text-align: center;
        flex: 1;
        max-width: 150px;
    }

    .step-circle {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        margin: 0 auto 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        color: white;
        font-size: 18px;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);
    }

    .step-pending {
        background: #6c757d;
    }

    .step-current {
        background: linear-gradient(45deg, #ffc107, #fd7e14);
        animation: pulse 2s infinite;
    }

    .step-approved {
        background: linear-gradient(45deg, #28a745, #20c997);
    }

    .step-rejected {
        background: linear-gradient(45deg, #dc3545, #c82333);
    }

    @@keyframes pulse {
        0% {
            box-shadow: 0 0 0 0 rgba(255, 193, 7, 0.7);
        }

        70% {
            box-shadow: 0 0 0 10px rgba(255, 193, 7, 0);
        }

        100% {
            box-shadow: 0 0 0 0 rgba(255, 193, 7, 0);
        }
    }

    .step-label {
        font-size: 12px;
        font-weight: 600;
        color: #495057;
        margin-bottom: 5px;
    }

    .step-name {
        font-size: 11px;
        color: #6c757d;
    }

    .step-date {
        font-size: 10px;
        color: #868e96;
        margin-top: 5px;
    }

    /* Info Grid */
    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
        gap: 25px;
        padding: 30px;
    }

    .info-card {
        background: white;
        padding: 25px;
        border-radius: 15px;
        border-left: 5px solid #0066cc;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
    }

        .info-card h6 {
            color: #0066cc;
            font-weight: 700;
            margin-bottom: 20px;
            font-size: 16px;
            text-transform: uppercase;
            border-bottom: 2px solid #0066cc;
            padding-bottom: 10px;
        }

    .info-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 12px;
        padding: 8px 0;
        border-bottom: 1px solid #f1f3f4;
    }

    .info-label {
        font-weight: 600;
        color: #495057;
    }

    .info-value {
        color: #212529;
        font-weight: 500;
        text-align: right;
    }

    /* Cost Center Distribution */
    .cost-center-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        margin: 20px 0;
    }

    .cost-center-card {
        background: linear-gradient(145deg, #fff 0%, #f8f9fa 100%);
        border-radius: 12px;
        padding: 20px;
        border-left: 5px solid #0066cc;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
    }

    .cost-center-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }

    .cost-center-name {
        font-weight: 700;
        color: #0066cc;
        font-size: 16px;
    }

    .cost-center-amount {
        font-weight: 700;
        color: #28a745;
        font-size: 18px;
    }

    .approver-info {
        background: #f8f9fa;
        padding: 15px;
        border-radius: 8px;
        margin-top: 15px;
    }

    .approver-status {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-top: 10px;
    }

    .status-icon {
        width: 20px;
        height: 20px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 12px;
        font-weight: bold;
    }

        .status-icon.approved {
            background: #28a745;
        }

        .status-icon.rejected {
            background: #dc3545;
        }

        .status-icon.pending {
            background: #ffc107;
        }

    /* Items Table */
    .items-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 14px;
        margin-top: 20px;
    }

        .items-table thead th {
            background: linear-gradient(135deg, #0066cc, #004499);
            color: white;
            padding: 15px 12px;
            text-align: center;
            font-weight: 600;
            border: none;
        }

        .items-table tbody td {
            padding: 15px 12px;
            border-bottom: 1px solid #dee2e6;
            text-align: center;
            vertical-align: middle;
        }

        .items-table tbody tr:hover {
            background: #f8f9fa;
        }

        .items-table tfoot tr {
            background: #0066cc;
            color: white;
            font-weight: bold;
        }

        .items-table tfoot td {
            padding: 15px 12px;
            font-size: 18px;
        }

    /* Approval History Table - IMPROVED */
    .approval-history {
        background: white;
        border-radius: 15px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        margin: 30px 0;
        overflow: hidden;
    }

    .approval-history-header {
        padding: 25px 30px;
        border-bottom: 2px solid #0066cc;
        background: #f8f9fa;
    }

    .approval-history-title {
        color: #0066cc;
        font-size: 22px;
        font-weight: 700;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .approval-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 14px;
    }

        .approval-table thead th {
            background: linear-gradient(135deg, #0066cc, #004499);
            color: white;
            padding: 16px 14px;
            text-align: left;
            font-weight: 600;
            border: none;
            font-size: 13px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .approval-table tbody td {
            padding: 18px 14px;
            border-bottom: 1px solid #e9ecef;
            vertical-align: middle;
            color: #495057;
        }

        .approval-table tbody tr {
            transition: background 0.2s ease;
        }

            .approval-table tbody tr:hover {
                background: #f8f9fa;
            }

            .approval-table tbody tr:last-child td {
                border-bottom: none;
            }

    /* Rejection Notice */
    .rejection-notice {
        background: #f8d7da;
        border: 2px solid #dc3545;
        border-radius: 10px;
        padding: 20px;
        margin: 20px 0;
    }

        .rejection-notice h5 {
            color: #721c24;
            margin-bottom: 15px;
        }

    .rejection-reason {
        background: white;
        padding: 15px;
        border-radius: 5px;
        margin-top: 8px;
        border: 1px solid #dc3545;
    }

    /* PO Status Container - IMPROVED */
    .po-status-container {
        background: linear-gradient(135deg, #fff9e6 0%, #fff3cd 100%);
        border: 2px solid #ffc107;
        border-radius: 12px;
        padding: 30px;
        margin: 30px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    }

    .po-status-header {
        display: flex;
        align-items: center;
        gap: 15px;
        margin-bottom: 20px;
    }

    .po-status-icon {
        font-size: 32px;
        color: #f0ad4e;
    }

    .po-status-title {
        font-size: 20px;
        font-weight: 700;
        color: #856404;
        margin: 0;
    }

    .po-status-message {
        font-size: 15px;
        color: #856404;
        margin-bottom: 25px;
        line-height: 1.6;
    }

    .po-action-buttons {
        display: flex;
        gap: 15px;
        justify-content: center;
        flex-wrap: wrap;
    }

    .btn-create-po-main {
        background: linear-gradient(45deg, #28a745, #20c997);
        color: white;
        border: none;
        padding: 14px 32px;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
        display: inline-flex;
        align-items: center;
        gap: 10px;
        text-decoration: none;
    }

        .btn-create-po-main:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(40, 167, 69, 0.4);
            color: white;
        }

    .btn-view-orders {
        background: #6c757d;
        color: white;
        border: none;
        padding: 14px 32px;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 10px;
        text-decoration: none;
    }

        .btn-view-orders:hover {
            background: #5a6268;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(108, 117, 125, 0.3);
            color: white;
        }

    /* Action Buttons */
    .action-section {
        background: white;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        margin: 20px 0;
        text-align: center;
    }

    .btn-action {
        padding: 12px 30px;
        border-radius: 25px;
        font-weight: 600;
        text-decoration: none;
        display: inline-block;
        margin: 5px 10px;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
    }

    .btn-submit {
        background: linear-gradient(45deg, #28a745, #20c997);
        color: white;
    }

        .btn-submit:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(40, 167, 69, 0.4);
            color: white;
        }

    .btn-secondary {
        background: #6c757d;
        color: white;
    }

    .btn-danger {
        background: #dc3545;
        color: white;
    }

    .btn-warning {
        background: #ffc107;
        color: #212529;
    }

    .btn-info {
        background: #17a2b8;
        color: white;
    }

    /* Bottom Navigation Buttons */
    .bottom-nav-buttons {
        display: flex;
        gap: 15px;
        justify-content: center;
        margin-top: 30px;
        padding: 20px 0;
        flex-wrap: wrap;
    }

    .btn-back,
    .btn-download-pdf {
        padding: 12px 28px;
        border-radius: 8px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 10px;
        transition: all 0.3s ease;
        font-size: 15px;
    }

    .btn-back {
        background: #6c757d;
        color: white;
        border: none;
    }

        .btn-back:hover {
            background: #5a6268;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(108, 117, 125, 0.3);
            color: white;
        }

    .btn-download-pdf {
        background: linear-gradient(45deg, #dc3545, #c82333);
        color: white;
        border: none;
    }

        .btn-download-pdf:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(220, 53, 69, 0.3);
            color: white;
        }

    /* Debug Section */
    .debug-section {
        background: #e3f2fd;
        border-left: 5px solid #2196f3;
        padding: 20px;
        margin: 20px;
        border-radius: 8px;
    }

        .debug-section h6 {
            color: #1565c0;
            margin-bottom: 15px;
            font-weight: 700;
        }

        .debug-section ul {
            margin: 10px 0 0 20px;
            line-height: 1.8;
        }

        .debug-section li {
            color: #0d47a1;
            font-size: 14px;
        }
</style>
<div class="details-container">
    <div class="container">
        <!-- Main Header -->
        <div class="main-card">
            <div class="header-section">
                <h1 class="header-title">Purchase Requisition Details</h1>
                <p class="header-subtitle">
                    @Model.PRReference - @(Model.ShortDescription ?? "No Description")
                </p>
                <div>
                    <span class="badge status-badge" style="@GetStatusBadgeStyle(Model.CurrentStatus)">
                        @Model.StatusDisplayName
                    </span>
                </div>
            </div>
        </div>

        <!--  DEBUG INFORMATION SECTION -->
        @if (Model.CurrentStatus == WorkflowStatus.Approved)
        {
            <div class="debug-section">
                <h6> Debug Information (PO Generation Status)</h6>
                <ul>
                    <li><strong>PR ID:</strong> @Model.Id</li>
                    <li><strong>PR Reference:</strong> @Model.PRReference</li>
                    <li><strong>PR Status:</strong> @Model.CurrentStatus</li>
                    <li><strong>PO Generated Flag:</strong> @Model.POGenerated</li>
                    <li><strong>PO Reference:</strong> @(Model.POReference ?? "NULL")</li>
                    <li><strong>PO Generated Date:</strong> @(Model.POGeneratedDate?.ToString("yyyy-MM-dd HH:mm:ss") ?? "NULL")</li>
                    <li><strong>No PO Required:</strong> @Model.NoPORequired</li>
                    <li><strong>Items Count:</strong> @(Model.Items?.Count ?? 0)</li>
                    <li><strong>Cost Centers Count:</strong> @(Model.CostCenters?.Count ?? 0)</li>
                    <li><strong>Final Approver:</strong> @(Model.FinalApprover ?? "NULL")</li>
                    <li><strong>Final Approval Date:</strong> @(Model.FinalApprovalDate?.ToString("yyyy-MM-dd HH:mm:ss") ?? "NULL")</li>
                </ul>
            </div>
        }

        <!-- COMPLETE APPROVAL PATH (Show All Steps Upfront) -->
        @if (Model.CurrentStatus != WorkflowStatus.Draft && Model.WorkflowSteps?.Any() == true)
        {
            <div class="approval-status-section">
                <h4 class="approval-status-title">
                     Complete Approval Path
                </h4>
                @{
                    var currency = Model.QuotationCurrency ?? "USD";
                    var amount = Model.TotalAmount;
                    var sgdValue = Model.ContractValueSGD;
                    var hasSignedPAF = Model.SignedPDF;
                    var isFixedAsset = Model.IsFixedAsset;
                    decimal cfoThreshold = 10000m;
                    decimal ceoThreshold = 1000000m;
                    string routingExplanation = "";
                    bool needsCFO = false;
                    bool needsCEO = false;
                    if (hasSignedPAF)
                    {
                        routingExplanation = " Signed PAF - Workflow ends after CS HOD (CFO/CEO bypassed)";
                    }
                    else if (!isFixedAsset)
                    {
                        needsCFO = true;
                        //  FIX: Make it clear CFO is final when Fixed Asset is unchecked
                        routingExplanation = $" Fixed Asset is UNCHECKED - CFO approval REQUIRED (FINAL - No CEO)";
                    }
                    else
                    {
                        if (sgdValue < cfoThreshold)
                        {
                            routingExplanation = $" Fixed Asset < SGD {cfoThreshold:N0} - Cost Center Approvers are FINAL approvers";

                        }
                        else
                        {
                            needsCFO = true;
                            routingExplanation = $" Fixed Asset ≥ SGD {cfoThreshold:N0} - CFO approval required";
                            if (sgdValue > ceoThreshold)
                            {
                                needsCEO = true;
                                routingExplanation += $", CEO required (> SGD {ceoThreshold:N0})";
                            }
                        }
                    }
                }
                <!-- Display amounts prominently -->
                <div style="background: linear-gradient(135deg, #667eea, #764ba2);
                        color: white; padding: 20px; border-radius: 12px; margin-bottom: 20px;">
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px;">
                        <div>
                            <div style="font-size: 12px; opacity: 0.9; margin-bottom: 5px;">Amount (with GST)</div>
                            <div style="font-size: 28px; font-weight: 700;">
                                @Model.QuotationCurrency @Model.TotalAmount.ToString("N2")
                            </div>
                            <div style="font-size: 11px; opacity: 0.8; margin-top: 5px;">
                                Tax-inclusive total for approval routing
                            </div>
                        </div>
                        @if (Model.QuotationCurrency != "SGD")
                        {
                            <div>
                                <div style="font-size: 12px; opacity: 0.9; margin-bottom: 5px;">Converted Amount (SGD)</div>
                                <div style="font-size: 28px; font-weight: 700;">
                                    SGD @Model.ContractValueSGD.ToString("N2")
                                </div>
                                <div style="font-size: 11px; opacity: 0.8; margin-top: 5px;">
                                    @Model.QuotationCurrency @Model.TotalAmount.ToString("N2") × @Model.ExchangeRateToSGD.ToString("F4")
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="approval-hierarchy">
                    <strong>Approval Hierarchy for this PR:</strong>
                    <ol>   
                        <li>
                            <strong>Submitter:</strong> @Model.SubmittedByEmail
                            @* @if (!string.IsNullOrEmpty(Model.SubmittedByEmail))
                            {
                                <strong>(@Model.SubmittedByEmail)</strong>
                            } *@
                            <span class="approval-check">✓ Submitted</span>
                            @if (Model.SubmittedDate.HasValue)
                            {
                                <small>(@Model.SubmittedDate.Value.ToString("MMM dd, HH:mm"))</small>
                            }
                        </li>
                        @{
                            // Group workflow steps by StepOrder
                            var groupedSteps = Model.WorkflowSteps
                            .OrderBy(s => s.StepOrder)
                            .GroupBy(s => s.StepOrder)
                            .ToList();
                            int displayedStepNumber = 1;
                            //  FIX: Find the HIGHEST step order where all steps contain "(Final" in the role
                            var finalStepOrders = Model.WorkflowSteps
                            .GroupBy(s => s.StepOrder)
                            .Where(g => g.Any(s => s.ApproverRole.Contains("(Final")))
                            .Select(g => g.Key)
                            .ToList();
                            var finalStepOrder = finalStepOrders.Any() ? finalStepOrders.Max() : 0;
                            //_logger.LogInformation($" Final step order identified: {finalStepOrder}");
                        }
                        @foreach (var stepGroup in groupedSteps)
                        {
                            var steps = stepGroup.ToList();
                            var stepOrder = stepGroup.Key;
                            @if (steps.Count > 1)
                            {
                                // PARALLEL APPROVALS
                                var allApproved = steps.All(s => s.Status == ApprovalStatus.Approved);
                                var anyRejected = steps.Any(s => s.Status == ApprovalStatus.Rejected);
                                //  FIX: Check if THIS step order matches the final step order
                                var isFinalStep = (stepOrder == finalStepOrder);
                                <li>
                                    <strong>Step @displayedStepNumber - Parallel Approval (@steps.Count approvers):</strong>
                                    @if (isFinalStep && allApproved)
                                    {
                                        <span style="background: linear-gradient(45deg, #28a745, #20c997);
                                                                    color: white;
                                                                    padding: 4px 12px;
                                                                    border-radius: 15px;
                                                                    font-size: 11px;
                                                                    font-weight: 700;
                                                                    margin-left: 10px;
                                                                    box-shadow: 0 2px 8px rgba(40, 167, 69, 0.3);">
                                             FINAL APPROVERS (@steps.Count)
                                        </span>
                                    }
                                    <ul style="margin: 10px 0 0 20px; padding: 0;">
                                        @foreach (var step in steps.OrderBy(s => s.Department))
                                        {
                                            <li style="list-style-type: disc; margin: 5px 0;">
                                                <strong>@step.ApproverRole:</strong>
                                                @if (!string.IsNullOrEmpty(step.ApproverEmail))
                                                {
                                                   @step.ApproverEmail
                                                   @*  @if (!string.IsNullOrEmpty(step.ApproverName))
                                                    {
                                                        <span style="color: #666; font-size: 12px;">(@step.ApproverName)</span>
                                                    } *@
                                                }
                                                else
                                                {
                                                    @step.ApproverName
                                                }
                                                @if (step.Status == ApprovalStatus.Approved)
                                                {
                                                    <span class="approval-check"> Approved</span>
                                                    if (step.ActionDate.HasValue)
                                                    {
                                                        <small>(@step.ActionDate.Value.ToString("MMM dd, HH:mm"))</small>
                                                    }
                                                }
                                                else if (step.Status == ApprovalStatus.Rejected)
                                                {
                                                    <span class="approval-rejected">✗ Rejected</span>
                                                }
                                                else if (step.Status == ApprovalStatus.Pending)
                                                {
                                                    <span class="approval-pending">⏳ Pending</span>
                                                }
                                                @if (!string.IsNullOrEmpty(step.Department))
                                                {
                                                    <small style="color: #888;"> - @step.Department</small>
                                                }
                                            </li>
                                        }
                                    </ul>
                                </li>
                            }
                            else
                            {
                                // SINGLE APPROVER
                                var step = steps.First();
                                //  FIX: Check if THIS step order matches the final step order
                                var isFinalStep = (stepOrder == finalStepOrder);
                                <li>
                                    <strong>@step.ApproverRole:</strong>
                                    @if (!string.IsNullOrEmpty(step.ApproverEmail))
                                    {
                                        @step.ApproverEmail
                                        @* @if (!string.IsNullOrEmpty(step.ApproverName))
                                        {
                                            <span style="color: #888; font-size: 12px;">(@step.ApproverName)</span>
                                        } *@
                                    }
                                    else
                                    {
                                        @step.ApproverName
                                    }
                                    @if (step.Status == ApprovalStatus.Approved)
                                    {
                                        <span class="approval-check"> Approved</span>
                                        if (step.ActionDate.HasValue)
                                        {
                                            <small>(@step.ActionDate.Value.ToString("MMM dd, HH:mm"))</small>
                                        }
                                        @if (isFinalStep)
                                        {
                                            <span style="background: linear-gradient(45deg, #28a745, #20c997);
                                                                                    color: white;
                                                                                    padding: 4px 12px;
                                                                                    border-radius: 15px;
                                                                                    font-size: 11px;
                                                                                    font-weight: 700;
                                                                                    margin-left: 10px;
                                                                                    box-shadow: 0 2px 8px rgba(40, 167, 69, 0.3);">
                                                 FINAL APPROVER
                                            </span>
                                        }
                                    }
                                    else if (step.Status == ApprovalStatus.Rejected)
                                    {
                                        <span class="approval-rejected">✗ Rejected</span>
                                    }
                                    else if (step.Status == ApprovalStatus.Pending)
                                    {
                                        <span class="approval-pending">⏳ Pending</span>
                                    }
                                    @if (!string.IsNullOrEmpty(step.Department))
                                    {
                                        <small style="color: #888;"> (@step.Department)</small>
                                    }
                                </li>
                            }
                            displayedStepNumber++;
                        }

                    </ol>
                </div>
                <!-- Routing explanation -->
                <div style="background: #fff3cd; padding: 15px; border-radius: 8px;
                        border-left: 5px solid #ffc107; margin-top: 15px;">
                    <strong style="color: #856404;">
                        <i class="fas fa-route"></i> Approval Routing:
                    </strong>
                    <div style="margin-top: 8px; color: #856404;">
                        @routingExplanation
                    </div>
                </div>
            </div>
        }
        <!-- Basic Information Grid -->
        <div class="main-card">
            <div class="info-grid">
                <!-- Basic Information -->
                <div class="info-card">
                    <h6>Basic Information</h6>
                    <div class="info-row">
                        <span class="info-label">PR Reference:</span>
                        <span class="info-value">@Model.PRReference</span>
                    </div>
                    <div class="info-row">
                        <span class="info-label">Company:</span>
                        <span class="info-value">@Model.Company</span>
                    </div>
                   @*  <div class="info-row">
                        <span class="info-label">Department:</span>
                        <span class="info-value">@Model.Department</span>
                    </div> *@
                    <div class="info-row">
                        <span class="info-label">Total Amount (incl. GST):</span>
                        <span class="info-value" style="font-weight: bold; color: #28a745; font-size: 18px;">
                            @Model.QuotationCurrency @Model.TotalAmount.ToString("N2")
                            <span style="font-size: 11px; color: #666; font-weight: normal; display: block; margin-top: 3px;">
                                (Tax-inclusive)
                            </span>
                        </span>
                    </div>
                    @if (Model.QuotationCurrency != "SGD")
                    {
                        <div class="info-row">
                            <span class="info-label">SGD Value:</span>
                            <span class="info-value" style="font-weight: bold; color: #0066cc; font-size: 16px;">
                                SGD @Model.ContractValueSGD.ToString("N2")
                                <small style="font-size: 12px; color: #666; font-weight: normal; display: block; margin-top: 3px;">
                                    (@Model.QuotationCurrency × @Model.ExchangeRateToSGD.ToString("F4"))
                                </small>
                            </span>
                        </div>
                    }
                    <div class="info-row">
                        <span class="info-label">Currency:</span>
                        <span class="info-value">@(Model.QuotationCurrency ?? "USD")</span>
                    </div>
                </div>

                <!-- Timeline Information -->
                <div class="info-card">
                    <h6>Timeline Information</h6>
                    <div class="info-row">
                        <span class="info-label">Created Date:</span>
                        <span class="info-value">@Model.CreatedDate.ToString("MMM dd, yyyy HH:mm")</span>
                    </div>
                    <div class="info-row">
                        <span class="info-label">Submitted Date:</span>
                        <span class="info-value">
                            @if (Model.SubmittedDate.HasValue)
                            {
                                @Model.SubmittedDate.Value.ToString("MMM dd, yyyy HH:mm")
                            }
                            else
                            {
                                <text>Not Submitted</text>
                            }
                        </span>
                    </div>
                    <div class="info-row">
                        <span class="info-label">Submitted By:</span>
                        <span class="info-value">@(Model.SubmittedBy ?? "Not Submitted")</span>
                    </div>
                    @if (Model.FinalApprovalDate.HasValue)
                    {
                        <div class="info-row">
                            <span class="info-label">Final Approval:</span>
                            <span class="info-value">@Model.FinalApprovalDate.Value.ToString("MMM dd, yyyy HH:mm")</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Final Approver:</span>
                            <span class="info-value">@Model.FinalApprover</span>
                        </div>
                    }
                </div>
            </div>

            <!-- Cost Center Distribution -->
            @if (Model.CostCenters?.Any() == true)
            {
                <div style="padding: 25px;">
                    <h5 style="color: #0066cc; margin-bottom: 20px; font-weight: 700;">
                        Cost Center Distribution (@Model.CostCenters.Count() centers)
                    </h5>
                    <div style="border-bottom:2px solid #0066cc"></div>
                    <div class="cost-center-grid">
                        @foreach (var cc in Model.CostCenters)
                        {
                            var percentage = Model.TotalAmount > 0
                            ? ((cc.Amount ?? 0) / Model.TotalAmount * 100).ToString("F2")
                            : "0.00";

                            <div class="cost-center-card">
                                <div class="cost-center-header">
                                    <div class="cost-center-name">@cc.Name</div>
                                    <div class="cost-center-amount">$@((cc.Amount ?? 0).ToString("N2"))</div>
                                </div>
                                <div style="text-align: center; margin: 10px 0;">
                                    <span style="font-size: 24px; font-weight: 700; color: #666;">@percentage%</span>
                                </div>
                                <div class="approver-info">
                                    <div><strong>Approver:</strong> @cc.Approver</div>
                                    @if (!string.IsNullOrEmpty(cc.ApproverEmail))
                                    {
                                        <div style="font-size: 12px; color: #666;">@cc.ApproverEmail</div>
                                    }
                                    <div class="approver-status">
                                        @{
                                            var hodStep = Model.WorkflowSteps?.FirstOrDefault(s => s.ApproverEmail == cc.ApproverEmail);
                                            if (hodStep != null)
                                            {
                                                <div class="status-icon @(hodStep.Status == ApprovalStatus.Approved ? "approved" :
                                                                                                                                                                                                                                          hodStep.Status == ApprovalStatus.Rejected ? "rejected" : "pending")">
                                    @if (hodStep.Status == ApprovalStatus.Approved)
                                                    {
                                                        <text></text>
                                                    }
                                                    else if (hodStep.Status == ApprovalStatus.Rejected)
                                                    {
                                                        <text>✗</text>
                                                    }
                                                    else
                                                    {
                                                        <text>⏳</text>
                                                    }
                                                </div>
                                                <span>@hodStep.Status.ToString()</span>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- Items Table -->
            @if (Model.Items?.Any() == true)
            {
                <div style="padding: 25px;">
                    <h5 style="color: #0066cc; margin-bottom: 20px; font-weight: 700;">
                        Purchase Items (@Model.Items.Count())
                    </h5>
                    <div style="border-bottom:2px solid #0066cc"></div>
                    <div style="overflow-x: auto;">
                        <table class="items-table">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Description</th>
                                    <th>Qty</th>
                                    <th>Unit Price</th>
                                    <th>Discount</th>
                                    <th>Amount</th>
                                    <th>GST</th>
                                    <th>Supplier</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    int itemIndex = 1;
                                }
                                @foreach (var item in Model.Items)
                                {
                                    <tr>
                                        <td>@itemIndex</td>
                                        <td style="text-align: left;">@(item.Description ?? "N/A")</td>
                                        <td>@item.Quantity</td>
                                        <td>@item.UnitPrice.ToString("C")</td>
                                        <td>
                                            @if (item.DiscountPercent > 0)
                                            {
                                                <text>@item.DiscountPercent%</text>
                                            }
                                            else if (item.DiscountAmount > 0)
                                            {
                                                <text>$@item.DiscountAmount.ToString("N2")</text>
                                            }
                                            else
                                            {
                                                <text>-</text>
                                            }
                                        </td>
                                        <td style="font-weight: bold;">@item.Amount.ToString("C")</td>
                                        <td>@(item.GST ?? "0%")</td>
                                        <td>@(item.SuggestedSupplier ?? "N/A")</td>
                                    </tr>
                                    itemIndex++;
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="5" style="text-align: right;">TOTAL:</td>
                                    <td>@Model.TotalAmount.ToString("C")</td>
                                    <td colspan="2"></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            }
        </div>

        <!-- Approval History Table -->
        @if (Model.Approvals?.Any() == true)
        {
            <div class="approval-history">
                <div class="approval-history-header">
                    <h5 class="approval-history-title">
                        <i class="fas fa-history"></i>
                        Approval History
                    </h5>
                </div>
                <div style="overflow-x: auto; padding: 0;">
                    <table class="approval-table">
                        <thead>
                            <tr>
                                <th style="width: 60px;">Step</th>
                                <th>Approver Role</th>
                                <th>Approver Name</th>
                                <th>Department</th>
                                <th style="width: 120px;">Status</th>
                                <th>Date</th>
                                <th>Comments</th>
                                <th style="width: 80px; text-align: center;">Method</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var approval in Model.Approvals.OrderBy(a => a.ApprovalLevel))
                            {
                                <tr>
                                    <td style="text-align: center;"><strong>@approval.ApprovalLevel</strong></td>
                                    <td><strong>@(approval.ApproverRole ?? "Approver")</strong></td>
                                    <td>@approval.ApproverName</td>
                                    <td>@(approval.Department ?? "N/A")</td>
                                    <td>
                                        <span class="badge" style="@GetApprovalStatusStyle(approval.Status)">
                                            @approval.Status
                                        </span>
                                    </td>
                                    <td>@approval.ApprovalDate.ToString("MMM dd, yyyy HH:mm")</td>
                                    <td style="max-width: 250px;">@approval.Comments</td>
                                    <td style="text-align: center;">
                                        @if (approval.ApprovalMethod == ApprovalMethod.Teams)
                                        {
                                            <i class="fab fa-microsoft" title="Teams" style="color: #5b5fc7; font-size: 18px;"></i>
                                        }
                                        else if (approval.ApprovalMethod == ApprovalMethod.Web)
                                        {
                                            <i class="fas fa-globe" title="Web" style="color: #0066cc; font-size: 18px;"></i>
                                        }
                                        else
                                        {
                                            <i class="fas fa-envelope" title="Email" style="color: #6c757d; font-size: 18px;"></i>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }

        <!-- Rejection Information -->
        @if (Model.CurrentStatus == WorkflowStatus.Rejected)
        {
            <div class="rejection-notice">
                <h5> This Purchase Requisition has been REJECTED</h5>
                <div style="margin-bottom: 10px;">
                    <strong>Rejected By:</strong> @Model.RejectedBy
                </div>
                @if (Model.RejectedDate.HasValue)
                {
                    <div style="margin-bottom: 10px;">
                        <strong>Rejected Date:</strong> @Model.RejectedDate.Value.ToString("MMM dd, yyyy HH:mm:ss")
                    </div>
                }
                @if (!string.IsNullOrEmpty(Model.RejectionReason))
                {
                    <div style="margin-top: 15px;">
                        <strong>Reason:</strong>
                        <div class="rejection-reason">
                            @Model.RejectionReason
                        </div>
                    </div>
                }
                <div style="margin-top: 20px; text-align: center;">
                    <a href="/PurchaseRequisition/Edit/@Model.Id"
                       class="btn-action btn-submit"
                       style="background: #dc3545; border: none; padding: 12px 30px; font-weight: 600;">
                        ✏️ Edit & Resubmit This PR
                    </a>
                </div>
            </div>
        }

        <!-- Action Buttons -->
        <div class="action-section">
            @if (Model.CurrentStatus == WorkflowStatus.Draft)
            {
                <div style="background: #28a745; padding: 25px; border-radius: 15px; color: white; margin: 25px 0;">
                    <h5>Ready to Submit for Approval?</h5>
                    <p>This will send approval requests to all required approvers based on cost center distribution.</p>
                    <form method="post" action="/PurchaseRequisition/SubmitForApproval/@Model.Id" style="display: inline;">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn-action btn-submit" onclick="return confirm('Submit for approval? This will notify all required approvers.');">
                            <i class="fas fa-paper-plane"></i> Submit for Approval
                        </button>
                    </form>
                </div>
            }

            @if (Model.CurrentStatus != WorkflowStatus.Draft &&
                        Model.CurrentStatus != WorkflowStatus.Approved &&
                        Model.CurrentStatus != WorkflowStatus.Rejected)
            {
                <div style="background: #17a2b8; padding: 20px; border-radius: 15px; color: white; margin: 25px 0;">
                    <h5><i class="fas fa-flask"></i> Testing Mode</h5>
                    <p style="margin-bottom: 15px;">This PR is currently in the approval workflow. You can auto-approve all pending steps for testing.</p>
                    <form method="post" asp-action="SimulateAllApprovals" asp-route-id="@Model.Id" style="display: inline;">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn-action btn-submit"
                                style="background: linear-gradient(45deg, #28a745, #20c997);"
                                onclick="return confirm('⚡ AUTO-APPROVE ALL STEPS?\n\nThis will instantly approve all @Model.TotalApprovalSteps approval steps.\n\nCurrent Step: @Model.CurrentApprovalStep of @Model.TotalApprovalSteps\n\nThis is for TESTING purposes only.\n\nContinue?');">
                            <i class="fas fa-check-double"></i> AUTO-APPROVE ALL PENDING STEPS (Testing)
                        </button>
                    </form>
                </div>
            }

            <!-- PO Generation Status Section - IMPROVED -->
            @if (Model.CurrentStatus == WorkflowStatus.Approved)
            {
                @if (Model.POGenerated && !string.IsNullOrEmpty(Model.POReference) &&
                            !Model.POReference.Contains("ERROR") && !Model.POReference.Contains("N/A") &&
                            ViewBag.POId != null)
                {
                    <!--  SUCCESS: PO Generated -->
                    <div class="alert alert-success" style="margin: 30px; border-radius: 12px; border-left: 5px solid #28a745;">
                        <div style="display: flex; align-items: start; gap: 15px;">
                            <i class="fas fa-check-circle" style="font-size: 32px; color: #28a745; margin-top: 5px;"></i>
                            <div style="flex: 1;">
                                <h5 style="color: #155724; margin: 0 0 15px 0; font-size: 18px; font-weight: 700;">
                                     Purchase Order Successfully Auto-Generated!
                                </h5>
                                <div style="background: white; padding: 20px; border-radius: 8px; margin-bottom: 15px;">
                                    <div style="display: grid; grid-template-columns: auto 1fr; gap: 15px; align-items: center;">
                                        <strong style="color: #155724;">PO Reference:</strong>
                                        <a asp-controller="PurchaseOrder"
                                           asp-action="Details"
                                           asp-route-id="@ViewBag.POId"
                                           style="color: #155724; text-decoration: underline; font-weight: 700; font-size: 16px;">
                                            @(ViewBag.POReference ?? Model.POReference)
                                        </a>
                                        <strong style="color: #155724;">Generated Date:</strong>
                                        <span>@Model.POGeneratedDate?.ToString("MMM dd, yyyy HH:mm")</span>
                                        @if (!string.IsNullOrEmpty(ViewBag.POStatus))
                                        {
                                            <strong style="color: #155724;">Status:</strong>
                                            <span class="badge bg-info">@ViewBag.POStatus</span>
                                        }
                                    </div>
                                </div>
                                <div style="display: flex; gap: 12px; flex-wrap: wrap;">
                                    <a asp-controller="PurchaseOrder"
                                       asp-action="Details"
                                       asp-route-id="@ViewBag.POId"
                                       class="btn btn-success">
                                        <i class="fas fa-file-invoice"></i> View Purchase Order
                                    </a>
                                    <a asp-controller="PurchaseOrder"
                                       asp-action="DownloadPDF"
                                       asp-route-id="@ViewBag.POId"
                                       class="btn btn-danger">
                                        <i class="fas fa-file-pdf"></i> Download PO PDF
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else if (Model.POGenerated && ViewBag.POId == null)
                {
                    <!--  WARNING: PO marked as generated but not found -->
                    <div class="alert alert-warning" style="margin: 30px; border-radius: 12px;">
                        <h5><i class="fas fa-exclamation-triangle"></i> PO Generation Issue</h5>
                        <p><strong>Status:</strong> This PR is marked as having a PO generated (@Model.POReference), but the PO record was not found in the database.</p>
                        <p style="margin: 10px 0;"><strong>Generated Date:</strong> @Model.POGeneratedDate?.ToString("MMM dd, yyyy HH:mm")</p>
                        <div style="margin-top: 15px;">
                            <a asp-controller="PurchaseOrder"
                               asp-action="Index"
                               class="btn btn-info">
                                <i class="fas fa-search"></i> Search All Purchase Orders
                            </a>
                            <a asp-controller="PurchaseOrder"
                               asp-action="CreateFromPR"
                               asp-route-prId="@Model.Id"
                               class="btn btn-warning">
                                <i class="fas fa-plus"></i> Create New PO
                            </a>
                        </div>
                    </div>
                }
                else if (Model.NoPORequired)
                {
                    <!--  INFO: No PO Required -->
                    <div class="alert alert-info" style="margin: 30px; border-radius: 12px; border-left: 5px solid #17a2b8;">
                        <div style="display: flex; align-items: center; gap: 15px;">
                            <i class="fas fa-info-circle" style="font-size: 28px; color: #0c5460;"></i>
                            <div>
                                <h5 style="color: #0c5460; margin: 0 0 8px 0; font-weight: 700;">No Purchase Order Required</h5>
                                <p style="margin: 0; color: #0c5460;">
                                    This requisition is marked as <strong>"No PO Required"</strong>.
                                    The purchase can proceed without generating a formal Purchase Order.
                                </p>
                            </div>
                        </div>
                    </div>
                }
                else if (!string.IsNullOrEmpty(Model.POReference) &&
                (Model.POReference.Contains("ERROR") ||
                Model.POReference.Contains("Failed") ||
                Model.POReference.Contains("Manual")))
                {
                    <!--  ERROR: PO Generation Failed -->
                    <div class="alert alert-danger" style="margin: 30px; border-radius: 12px;">
                        <h5><i class="fas fa-times-circle"></i> PO Generation Failed</h5>
                        <p><strong>Error Details:</strong> @Model.POReference</p>
                        <p style="margin: 10px 0;">The automatic PO generation encountered an error. Please create the PO manually.</p>
                        <div style="margin-top: 15px;">
                            <a asp-controller="PurchaseOrder"
                               asp-action="CreateFromPR"
                               asp-route-prId="@Model.Id"
                               class="btn btn-warning">
                                <i class="fas fa-plus"></i> Create PO Manually
                            </a>
                            <a asp-controller="PurchaseOrder"
                               asp-action="Index"
                               class="btn btn-secondary">
                                <i class="fas fa-list"></i> View All POs
                            </a>
                        </div>
                    </div>
                }
                else
                {
                    <!-- ⏳ DEFAULT: PO Not Yet Generated -->
                    <div class="po-status-container">
                        <div class="po-status-header">
                            <i class="fas fa-clock po-status-icon"></i>
                            <h4 class="po-status-title">Purchase Order Not Generated</h4>
                        </div>
                        <p class="po-status-message">
                            This Purchase Requisition has been fully approved but a Purchase Order has not been created yet.
                            Click the button below to create the Purchase Order now.
                        </p>
                        <div class="po-action-buttons">
                            <a asp-controller="PurchaseOrder"
                               asp-action="CreateFromPR"
                               asp-route-prId="@Model.Id"
                               class="btn-create-po-main">
                                <i class="fas fa-plus-circle"></i> Create Purchase Order Now
                            </a>
                            <a asp-controller="PurchaseOrder"
                               asp-action="Index"
                               class="btn-view-orders">
                                <i class="fas fa-list"></i> View All Purchase Orders
                            </a>
                        </div>
                    </div>
                }
            }

            <!-- Bottom Navigation -->
            <div class="bottom-nav-buttons">
                <a href="/PurchaseRequisition/Index" class="btn-back">
                    <i class="fas fa-arrow-left"></i> Back to List
                </a>
                <a href="/PurchaseRequisition/DownloadPDF/@Model.Id" class="btn-download-pdf">
                    <i class="fas fa-file-pdf"></i> Download PDF
                </a>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetStatusBadgeStyle(WorkflowStatus status)
    {
        return status switch
        {
            WorkflowStatus.Draft => "background: #6c757d; color: white;",
            WorkflowStatus.Approved => "background: #28a745; color: white;",
            WorkflowStatus.Rejected => "background: #dc3545; color: white;",
            _ => "background: #ffc107; color: #212529;"
        };
    }

    private string GetStepClass(ApprovalWorkflowStep step, int currentStep)
    {
        if (step.Status == ApprovalStatus.Approved)
            return "step-approved";
        else if (step.Status == ApprovalStatus.Rejected)
            return "step-rejected";
        else if (step.StepOrder == currentStep)
            return "step-current";
        else
            return "step-pending";
    }

    private string GetApprovalStatusStyle(ApprovalStatus status)
    {
        return status switch
        {
            ApprovalStatus.Approved => "background: #28a745; color: white; padding: 4px 8px; border-radius: 12px; font-size: 11px;",
            ApprovalStatus.Rejected => "background: #dc3545; color: white; padding: 4px 8px; border-radius: 12px; font-size: 11px;",
            ApprovalStatus.RequiresModification => "background: #fd7e14; color: white; padding: 4px 8px; border-radius: 12px; font-size: 11px;",
            _ => "background: #ffc107; color: #212529; padding: 4px 8px; border-radius: 12px; font-size: 11px;"
        };
    }
}