@model TradingLimitMVC.Models.TradingLimitRequest
@{
    ViewData["Title"] = "Create Trading Limit Request";
}

<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f8f9fa;
    }

    .page-wrapper {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        min-height: 100vh;
        padding: 20px 0;
    }

    .main-container {
        background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
        border: none;
        margin: 20px auto;
        padding: 0;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        max-width: 1000px;
    }

    .header-section {
        background: linear-gradient(135deg, #0066cc, #004499);
        border-bottom: none;
        padding: 20px 25px;
        color: white;
        text-align: center;
    }

    .header-title {
        font-size: 24px;
        font-weight: 700;
        margin: 0;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    .form-content {
        padding: 25px;
    }

    .form-section {
        margin-bottom: 30px;
        background: #ffffff;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .section-title {
        font-size: 16px;
        font-weight: 600;
        color: #495057;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 2px solid #e9ecef;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-label {
        display: block;
        margin-bottom: 5px;
        font-weight: 600;
        color: #495057;
        font-size: 14px;
    }

    .form-control {
        width: 100%;
        padding: 10px 12px;
        border: 2px solid #e1e5e9;
        border-radius: 8px;
        font-size: 14px;
        transition: all 0.3s ease;
        background-color: #ffffff;
    }

    .form-control:focus {
        border-color: #0066cc;
        outline: none;
        box-shadow: 0 0 0 0.2rem rgba(0, 102, 204, 0.25);
    }

    .form-control.required {
        background-color: #fffbf0;
    }

    .form-row {
        display: flex;
        gap: 20px;
        margin-bottom: 20px;
    }

    .form-col {
        flex: 1;
    }

    .form-col-half {
        flex: 0 0 48%;
    }

    .btn-group {
        display: flex;
        gap: 10px;
        justify-content: center;
        margin-top: 30px;
        padding-top: 20px;
        border-top: 1px solid #e9ecef;
    }

    .btn {
        padding: 12px 30px;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        text-decoration: none;
        transition: all 0.3s ease;
        cursor: pointer;
        font-size: 14px;
    }

    .btn-primary {
        background: linear-gradient(135deg, #0066cc, #004499);
        color: white;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 102, 204, 0.4);
    }

    .btn-secondary {
        background: #6c757d;
        color: white;
    }

    .btn-secondary:hover {
        background: #5a6268;
        transform: translateY(-2px);
    }

    .text-danger {
        color: #dc3545 !important;
        font-size: 12px;
        margin-top: 5px;
    }

    .supporting-docs {
        background: #f8f9fa;
        border: 2px dashed #dee2e6;
        border-radius: 8px;
        padding: 20px;
        text-align: center;
        margin-top: 10px;
    }

    .upload-icon {
        font-size: 48px;
        color: #6c757d;
        margin-bottom: 10px;
    }

    /* Selected Files Styles */
    .selected-files-container {
        background: #f8f9fa;
        border: 1px solid #e9ecef;
        border-radius: 8px;
        padding: 15px;
        margin-top: 15px;
    }

    .selected-files-list {
        max-height: 200px;
        overflow-y: auto;
    }

    .selected-file-item {
        display: flex;
        align-items: center;
        justify-content: between;
        padding: 8px 12px;
        margin: 5px 0;
        background: white;
        border: 1px solid #dee2e6;
        border-radius: 6px;
        transition: all 0.2s ease;
    }

    .selected-file-item:hover {
        border-color: #007bff;
        box-shadow: 0 2px 4px rgba(0,123,255,0.1);
    }

    .file-info {
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    .file-name {
        font-weight: 500;
        color: #495057;
        font-size: 14px;
        margin-bottom: 2px;
    }

    .file-size {
        font-size: 12px;
        color: #6c757d;
    }

    .file-icon {
        margin-right: 10px;
        font-size: 18px;
    }

    .file-remove-btn {
        background: none;
        border: none;
        color: #dc3545;
        cursor: pointer;
        padding: 4px;
        border-radius: 4px;
        transition: background-color 0.2s ease;
    }

    .file-remove-btn:hover {
        background-color: #f8d7da;
    }

    .file-status-valid {
        color: #28a745;
    }

    .file-status-error {
        color: #dc3545;
    }

    .file-input {
        position: relative;
        transition: all 0.3s ease;
    }

    .file-input:hover {
        border-color: #007bff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    .file-input.drag-over {
        border-color: #28a745;
        background-color: #d4edda;
        box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
    }
</style>

<div class="page-wrapper">
    <div class="main-container">
        <div class="header-section">
            <h1 class="header-title">Trading Limit Request Form</h1>
        </div>

        <div class="form-content">
            <form asp-action="Create" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <!-- Basic Information Section -->
                <div class="form-section">
                    <h3 class="section-title">Request Information</h3>
                    
                    <div class="form-row">
                        <div class="form-col">
                            <label asp-for="RequestDate" class="form-label">Request Date <span class="text-danger">*</span></label>
                            <input asp-for="RequestDate" class="form-control required" type="date" />
                            <span asp-validation-for="RequestDate" class="text-danger"></span>
                        </div>
                        <div class="form-col">
                            <label asp-for="LimitEndDate" class="form-label">Limit End Date <span class="text-danger">*</span></label>
                            <input asp-for="LimitEndDate" class="form-control required" type="date" />
                            <span asp-validation-for="LimitEndDate" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-col">
                            <label asp-for="TRCode" class="form-label">TR Code <span class="text-danger">*</span></label>
                            <input asp-for="TRCode" class="form-control required" placeholder="Enter TR Code" />
                            <span asp-validation-for="TRCode" class="text-danger"></span>
                        </div>
                        <div class="form-col">
                            <label asp-for="ClientCode" class="form-label">Client Code <span class="text-danger">*</span></label>
                            <input asp-for="ClientCode" class="form-control required" placeholder="Enter Client Code" />
                            <span asp-validation-for="ClientCode" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="RequestType" class="form-label">Request Type <span class="text-danger">*</span></label>
                        <select asp-for="RequestType" class="form-control required">
                            <option value="">Select Request Type</option>
                            <option value="Increase Limit">Increase Limit</option>
                            <option value="Decrease Limit">Decrease Limit</option>
                            <option value="New Limit">New Limit</option>
                            <option value="Cancel Limit">Cancel Limit</option>
                        </select>
                        <span asp-validation-for="RequestType" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="ReasonType" class="form-label">Reason Type <span class="text-danger">*</span></label>
                        <select asp-for="ReasonType" class="form-control required">
                            <option value="">Select Reason Type</option>
                            <option value="Business Growth">Business Growth</option>
                            <option value="Market Opportunity">Market Opportunity</option>
                            <option value="Risk Management">Risk Management</option>
                            <option value="Regulatory Requirement">Regulatory Requirement</option>
                            <option value="Client Request">Client Request</option>
                            <option value="Other">Other</option>
                        </select>
                        <span asp-validation-for="ReasonType" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="BriefDescription" class="form-label">Brief Description <span class="text-danger">*</span></label>
                        <textarea asp-for="BriefDescription" class="form-control required" rows="3" placeholder="Enter brief description of the request"></textarea>
                        <span asp-validation-for="BriefDescription" class="text-danger"></span>
                    </div>
                </div>

                <!-- Limit Information Section -->
                <div class="form-section">
                    <h3 class="section-title">Limit Information</h3>
                    
                    @* Temporarily hidden fields - can be re-enabled by uncommenting *@
                    @* <div class="form-row">
                        <div class="form-col">
                            <label asp-for="GLCurrentLimit" class="form-label">GL Current Limit <span class="text-danger">*</span></label>
                            <input asp-for="GLCurrentLimit" class="form-control required" type="number" step="0.01" placeholder="0.00" />
                            <span asp-validation-for="GLCurrentLimit" class="text-danger"></span>
                        </div>
                        <div class="form-col"> *@
                            <label asp-for="GLProposedLimit" class="form-label">GL Proposed Limit <span class="text-danger">*</span></label>
                            <input asp-for="GLProposedLimit" class="form-control required" type="number" step="0.01" placeholder="0.00" />
                            <span asp-validation-for="GLProposedLimit" class="text-danger"></span>
                        @* </div>
                    </div>

                    <div class="form-row">
                        <div class="form-col">
                            <label asp-for="CurrentCurrentLimit" class="form-label">Current Current Limit <span class="text-danger">*</span></label>
                            <input asp-for="CurrentCurrentLimit" class="form-control required" type="number" step="0.01" placeholder="0.00" />
                            <span asp-validation-for="CurrentCurrentLimit" class="text-danger"></span>
                        </div>
                        <div class="form-col">
                            <label asp-for="CurrentProposedLimit" class="form-label">Current Proposed Limit <span class="text-danger">*</span></label>
                            <input asp-for="CurrentProposedLimit" class="form-control required" type="number" step="0.01" placeholder="0.00" />
                            <span asp-validation-for="CurrentProposedLimit" class="text-danger"></span>
                        </div>
                    </div> *@
                </div>

                <!-- Supporting Documents Section -->
                <div class="form-section">
                    <h3 class="section-title">Supporting Document</h3>
                    <div class="supporting-docs">
                        <div class="upload-icon">
                            <i class="fas fa-cloud-upload-alt"></i>
                        </div>
                        <p><strong>Attach files</strong></p>
                        <input type="file" id="fileUpload" name="attachments" multiple accept=".pdf,.doc,.docx,.xls,.xlsx,.jpg,.jpeg,.png,.gif" class="form-control file-input" style="margin-top: 10px;" onchange="displaySelectedFiles(this)" ondragover="handleDragOver(event)" ondrop="handleDrop(event)" />
                        <p class="text-muted" style="margin-top: 10px; font-size: 12px;">
                            Supported formats: PDF, DOC, DOCX, XLS, XLSX, JPG, PNG, GIF (Max 10MB per file)
                        </p>
                        
                        <!-- Selected Files Display -->
                        <div id="selectedFilesContainer" class="selected-files-container" style="display: none; margin-top: 15px;">
                            <h6 class="mb-2"><i class="fas fa-paperclip me-1"></i> Selected Files:</h6>
                            <div id="selectedFilesList" class="selected-files-list"></div>
                            <div class="mt-2">
                                <small class="text-muted">
                                    <span id="fileCount">0</span> file(s) selected • 
                                    Total size: <span id="totalSize">0 KB</span>
                                </small>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Form Buttons -->
                <div class="btn-group">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Save Draft
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-times"></i> Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Function to display selected files
        function displaySelectedFiles(input) {
            const container = document.getElementById('selectedFilesContainer');
            const filesList = document.getElementById('selectedFilesList');
            const fileCount = document.getElementById('fileCount');
            const totalSize = document.getElementById('totalSize');
            
            // Clear previous content
            filesList.innerHTML = '';
            
            if (input.files && input.files.length > 0) {
                container.style.display = 'block';
                
                let totalSizeBytes = 0;
                const maxFileSize = 10 * 1024 * 1024; // 10MB
                const allowedExtensions = ['.pdf', '.doc', '.docx', '.xls', '.xlsx', '.jpg', '.jpeg', '.png', '.gif'];
                
                Array.from(input.files).forEach((file, index) => {
                    totalSizeBytes += file.size;
                    
                    // Validate file
                    const isValidSize = file.size <= maxFileSize;
                    const fileExtension = '.' + file.name.split('.').pop().toLowerCase();
                    const isValidType = allowedExtensions.includes(fileExtension);
                    const isValid = isValidSize && isValidType;
                    
                    // Create file item element
                    const fileItem = document.createElement('div');
                    fileItem.className = 'selected-file-item';
                    fileItem.innerHTML = `
                        <i class="fas ${getFileIcon(fileExtension)} file-icon ${isValid ? 'file-status-valid' : 'file-status-error'}"></i>
                        <div class="file-info">
                            <div class="file-name">${file.name}</div>
                            <div class="file-size">
                                ${formatFileSize(file.size)}
                                ${!isValid ? '<span class="file-status-error">• Invalid file</span>' : ''}
                                ${!isValidSize ? '<span class="file-status-error">• Too large (max 10MB)</span>' : ''}
                                ${!isValidType ? '<span class="file-status-error">• Unsupported format</span>' : ''}
                            </div>
                        </div>
                        <button type="button" class="file-remove-btn" onclick="removeFile(${index})" title="Remove file">
                            <i class="fas fa-times"></i>
                        </button>
                    `;
                    
                    filesList.appendChild(fileItem);
                });
                
                // Update summary
                fileCount.textContent = input.files.length;
                totalSize.textContent = formatFileSize(totalSizeBytes);
            } else {
                container.style.display = 'none';
            }
        }
        
        // Function to remove a file from selection
        function removeFile(index) {
            const input = document.getElementById('fileUpload');
            const dt = new DataTransfer();
            
            // Add all files except the one to remove
            Array.from(input.files).forEach((file, i) => {
                if (i !== index) {
                    dt.items.add(file);
                }
            });
            
            // Update input files
            input.files = dt.files;
            
            // Refresh display
            displaySelectedFiles(input);
        }
        
        // Helper function to get file icon based on extension
        function getFileIcon(extension) {
            switch (extension.toLowerCase()) {
                case '.pdf':
                    return 'fa-file-pdf';
                case '.doc':
                case '.docx':
                    return 'fa-file-word';
                case '.xls':
                case '.xlsx':
                    return 'fa-file-excel';
                case '.jpg':
                case '.jpeg':
                case '.png':
                case '.gif':
                    return 'fa-file-image';
                default:
                    return 'fa-file';
            }
        }
        
        // Helper function to format file size
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];
        }
        
        // Drag and drop functions
        function handleDragOver(event) {
            event.preventDefault();
            event.stopPropagation();
            event.target.classList.add('drag-over');
        }
        
        function handleDrop(event) {
            event.preventDefault();
            event.stopPropagation();
            event.target.classList.remove('drag-over');
            
            const input = document.getElementById('fileUpload');
            const files = event.dataTransfer.files;
            
            if (files.length > 0) {
                input.files = files;
                displaySelectedFiles(input);
            }
        }
        
        // Remove drag-over class when drag leaves
        document.addEventListener('DOMContentLoaded', function() {
            const fileInput = document.getElementById('fileUpload');
            
            if (fileInput) {
                fileInput.addEventListener('dragleave', function(event) {
                    event.target.classList.remove('drag-over');
                });
            }
        });

        // Clear file selection when form is reset
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            if (form) {
                form.addEventListener('reset', function() {
                    const container = document.getElementById('selectedFilesContainer');
                    container.style.display = 'none';
                });
            }
        });
    </script>
}