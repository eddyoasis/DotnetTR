// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TradingLimitMVC.Data;

#nullable disable

namespace TradingLimitMVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250925070932_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TradingLimitMVC.Models.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FileName");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("FilePath");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("FileSize");

                    b.Property<int?>("PurchaseRequisitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UploadDate");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseRequisitionId");

                    b.ToTable("Attachments", (string)null);
                });

            modelBuilder.Entity("TradingLimitMVC.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attention")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Attention");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Company");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DeliveryAddress");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeliveryDate");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("FaxNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FaxNo");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("IssueDate");

                    b.Property<string>("OrderIssuedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OrderIssuedBy");

                    b.Property<string>("PONo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PONo");

                    b.Property<string>("POOriginator")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("POOriginator");

                    b.Property<string>("POReference")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("POReference");

                    b.Property<string>("PRReference")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRReference");

                    b.Property<string>("PaymentTerms")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PaymentTerms");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PhoneNo");

                    b.Property<int?>("PurchaseRequisitionId")
                        .HasColumnType("int")
                        .HasColumnName("PurchaseRequisitionId");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remarks");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Vendor");

                    b.Property<string>("VendorAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VendorAddress");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseRequisitionId");

                    b.ToTable("PurchaseOrders", (string)null);
                });

            modelBuilder.Entity("TradingLimitMVC.Models.PurchaseOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Amount");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DiscountAmount");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("DiscountPercent");

                    b.Property<string>("GST")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GST");

                    b.Property<string>("PRNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRNo");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderItems", (string)null);
                });

            modelBuilder.Entity("TradingLimitMVC.Models.PurchaseRequisition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Company");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ContactPerson");

                    b.Property<string>("ContactPhoneNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ContactPhoneNo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CurrentApprover")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CurrentApprover");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("int")
                        .HasColumnName("CurrentStatus");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DeliveryAddress");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Department");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpectedDeliveryDate");

                    b.Property<DateTime?>("FinalApprovalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FinalApprovalDate");

                    b.Property<string>("FinalApprover")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FinalApprover");

                    b.Property<bool>("IsITRelated")
                        .HasColumnType("bit")
                        .HasColumnName("IsITRelated");

                    b.Property<bool>("NoPORequired")
                        .HasColumnType("bit")
                        .HasColumnName("NoPORequired");

                    b.Property<bool>("POGenerated")
                        .HasColumnType("bit")
                        .HasColumnName("POGenerated");

                    b.Property<DateTime?>("POGeneratedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("POGeneratedDate");

                    b.Property<string>("POReference")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("POReference");

                    b.Property<string>("PRInternalNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRInternalNo");

                    b.Property<string>("PRReference")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRReference");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("QuotationCurrency")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("QuotationCurrency");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Reason");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remarks");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ShortDescription");

                    b.Property<bool>("SignedPDF")
                        .HasColumnType("bit")
                        .HasColumnName("SignedPDF");

                    b.Property<string>("SubmittedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SubmittedBy");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("SubmittedDate");

                    b.Property<string>("TypeOfPurchase")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TypeOfPurchase");

                    b.HasKey("Id");

                    b.ToTable("PurchaseRequisitions", (string)null);
                });

            modelBuilder.Entity("TradingLimitMVC.Models.PurchaseRequisitionApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ApprovalDate");

                    b.Property<int>("ApprovalLevel")
                        .HasColumnType("int")
                        .HasColumnName("ApprovalLevel");

                    b.Property<string>("ApproverEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ApproverEmail");

                    b.Property<string>("ApproverName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ApproverName");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comments");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Department");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmployeeId");

                    b.Property<int>("PurchaseRequisitionId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseRequisitionId");

                    b.ToTable("PurchaseRequisitionApprovals", (string)null);
                });

            modelBuilder.Entity("TradingLimitMVC.Models.PurchaseRequisitionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Action");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Amount");

                    b.Property<string>("AssetsClass")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AssetsClass");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DiscountAmount");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("DiscountPercent");

                    b.Property<string>("FixedAssets")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FixedAssets");

                    b.Property<string>("GST")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GST");

                    b.Property<DateTime?>("MaintenanceFrom")
                        .HasColumnType("datetime2")
                        .HasColumnName("MaintenanceFrom");

                    b.Property<DateTime?>("MaintenanceTo")
                        .HasColumnType("datetime2")
                        .HasColumnName("MaintenanceTo");

                    b.Property<string>("PaymentTerms")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PaymentTerms");

                    b.Property<int>("PurchaseRequisitionId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity");

                    b.Property<string>("SuggestedSupplier")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SuggestedSupplier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseRequisitionId");

                    b.ToTable("PurchaseRequisitionItems", (string)null);
                });

            modelBuilder.Entity("TradingLimitMVC.Models.Attachment", b =>
                {
                    b.HasOne("TradingLimitMVC.Models.PurchaseRequisition", "PurchaseRequisition")
                        .WithMany("Attachments")
                        .HasForeignKey("PurchaseRequisitionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("PurchaseRequisition");
                });

            modelBuilder.Entity("TradingLimitMVC.Models.PurchaseOrder", b =>
                {
                    b.HasOne("TradingLimitMVC.Models.PurchaseRequisition", "PurchaseRequisition")
                        .WithMany()
                        .HasForeignKey("PurchaseRequisitionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("PurchaseRequisition");
                });

            modelBuilder.Entity("TradingLimitMVC.Models.PurchaseOrderItem", b =>
                {
                    b.HasOne("TradingLimitMVC.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("Items")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("TradingLimitMVC.Models.PurchaseRequisitionApproval", b =>
                {
                    b.HasOne("TradingLimitMVC.Models.PurchaseRequisition", "PurchaseRequisition")
                        .WithMany("Approvals")
                        .HasForeignKey("PurchaseRequisitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseRequisition");
                });

            modelBuilder.Entity("TradingLimitMVC.Models.PurchaseRequisitionItem", b =>
                {
                    b.HasOne("TradingLimitMVC.Models.PurchaseRequisition", "PurchaseRequisition")
                        .WithMany("Items")
                        .HasForeignKey("PurchaseRequisitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseRequisition");
                });

            modelBuilder.Entity("TradingLimitMVC.Models.PurchaseOrder", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("TradingLimitMVC.Models.PurchaseRequisition", b =>
                {
                    b.Navigation("Approvals");

                    b.Navigation("Attachments");

                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
